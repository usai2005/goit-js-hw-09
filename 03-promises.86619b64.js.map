{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAeF,SAASC,cAAc,kBACtCE,EAAcH,SAASC,cAAc,iBACrCG,EAAgBJ,SAASC,cAAc,mBAgC7C,SAASI,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE5B,MAAMC,EAAgBC,KAAKC,SAAW,GAErCC,YAAW,KAELH,EAEFF,EAAQ,C,SAACH,E,MAAUC,IAInBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAI1BA,EAAM,G,CA9CbR,EAAKgB,iBAAiB,UAAWC,IAE/BA,EAAEC,iBAEF,IAAIC,EAAOC,OAAOjB,EAAakB,OAE/B,IAAK,IAAIC,EAAI,EAAGA,GAAKF,OAAOf,EAAcgB,OAAQC,GAAK,EAIrDhB,EAAcgB,EAAGH,GACdI,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MAEjBV,EAAA0B,OAAOC,QAAQ,uBAAqBlB,QAAiBC,MAAW,CAAIkB,SAAS,EAAOC,MAAO,SAAY,IAGxGC,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAElBV,EAAA0B,OAAOK,QAAQ,sBAAoBtB,QAAeC,MAAW,CAAIkB,SAAS,EAAOC,MAAO,SAAY,IAIxGR,GAAQC,OAAOhB,EAAYiB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form')\nconst enteredDelay = document.querySelector('[name=\"delay\"]');\nconst enteredStep = document.querySelector('[name=\"step\"]');\nconst enteredAmount = document.querySelector('[name=\"amount\"]');\n\n//actions by submit btn clicking\n\nform.addEventListener('submit', (e) => {\n  \n  e.preventDefault();\n  \n  let step = Number(enteredDelay.value);\n\n  for (let i = 1; i <= Number(enteredAmount.value); i += 1) {\n    \n    //calling promise creating function and getting promise results\n    \n    createPromise(i, step)\n      .then(({ position, delay }) => {\n        \n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { useIcon: false, width: '230px', },);\n        \n    })\n      .catch(({ position, delay }) => {\n\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, { useIcon: false, width: '230px', },);\n        \n    });\n    \n    step += Number(enteredStep.value);\n  };\n});\n\n//promise creating\n\nfunction createPromise(position, delay) { \n\n  return new Promise((resolve, reject) => {\n\n   const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n       \n      if (shouldResolve) {\n      \n        resolve({position, delay});\n\n      } else {\n\n        reject({position, delay});\n        \n      };\n\n    }, delay);\n\n  });\n  \n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$enteredDelay","$47d4ff9957288465$var$enteredStep","$47d4ff9957288465$var$enteredAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","step","Number","value","i","then","Notify","success","useIcon","width","catch","failure"],"version":3,"file":"03-promises.86619b64.js.map"}